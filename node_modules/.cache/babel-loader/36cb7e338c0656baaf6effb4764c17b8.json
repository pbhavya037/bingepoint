{"ast":null,"code":"var _jsxFileName = \"/media/nitin037/OK/pango/pangomovies/src/parts/tvseries.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Serieslist from './partial/serieslist';\nimport CustomPage from './partial/custompage';\nimport Genre from './partial/genre';\nimport useGen from './partial/useGen';\nimport Modal from './partial/modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Series = () => {\n  _s();\n\n  const [slist, setSlist] = useState([]);\n  const [totalpages, setTotalpages] = useState(1);\n  const [page, setPage] = useState(1);\n  const [modal, setModal] = useState(false);\n  const [type, setType] = useState('');\n  const [mid, setMID] = useState();\n  const [selgen, setSelgen] = useState([]);\n  const [gen, setGen] = useState([]);\n  const geturl = useGen(selgen);\n\n  const seriesReq = async () => {\n    const url = ` https://api.themoviedb.org/3/discover/tv?api_key=baa2f39af2ebd5604c32fe6a7b3162e5&language=en-US&sort_by=popularity.desc&page=${page}&timezone=America%2FNew_York&with_genres=${geturl}&include_null_first_air_dates=false&with_watch_monetization_types=flatrate&with_status=0&with_type=0`;\n    const res = await fetch(url);\n    const resJson = await res.json();\n\n    if (resJson.results) {\n      setSlist(resJson.results);\n      setTotalpages(resJson.total_pages);\n    }\n\n    window.scroll(0, 0);\n  };\n\n  useEffect(() => {\n    seriesReq();\n  }, [page, geturl]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center w-screen\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"font-bold text-2xl p-4 \",\n        children: \"TV Series \\uD83D\\uDCFA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Genre, {\n      type: \"tv\",\n      gen: gen,\n      setGen: setGen,\n      selgen: selgen,\n      setSelgen: setSelgen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \" gap-8 justify-around grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 p-14 lg:p-20 md:p-12 \",\n      children: slist && slist.map(m => /*#__PURE__*/_jsxDEV(Serieslist, {\n        id: m.id,\n        poster: m.poster_path,\n        title: m.title || m.name,\n        date: m.release_date || m.first_air_date,\n        vote: m.vote_average,\n        setModal: setModal,\n        setType: setType,\n        setMID: setMID\n      }, m.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 47\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), totalpages > 1 && /*#__PURE__*/_jsxDEV(CustomPage, {\n      page: page,\n      setPage: setPage,\n      totalpages: totalpages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), modal && /*#__PURE__*/_jsxDEV(Modal, {\n      setModal: setModal,\n      type: type,\n      mid: mid\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Series, \"jQC72iOBnQev3h6J3CBaNKPWSec=\", false, function () {\n  return [useGen];\n});\n\n_c = Series;\nexport default Series;\n\nvar _c;\n\n$RefreshReg$(_c, \"Series\");","map":{"version":3,"names":["React","useEffect","useState","Serieslist","CustomPage","Genre","useGen","Modal","Series","slist","setSlist","totalpages","setTotalpages","page","setPage","modal","setModal","type","setType","mid","setMID","selgen","setSelgen","gen","setGen","geturl","seriesReq","url","res","fetch","resJson","json","results","total_pages","window","scroll","map","m","id","poster_path","title","name","release_date","first_air_date","vote_average"],"sources":["/media/nitin037/OK/pango/pangomovies/src/parts/tvseries.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Serieslist from './partial/serieslist';\r\nimport CustomPage from './partial/custompage';\r\nimport Genre from './partial/genre';\r\nimport useGen from './partial/useGen';\r\nimport Modal from './partial/modal';\r\n\r\n\r\nconst Series = () => {\r\n    const [slist, setSlist] = useState([]);\r\n    const [totalpages, setTotalpages] = useState(1);\r\n    const [page, setPage] = useState(1);\r\n    const [modal,setModal] = useState(false);\r\n    const [type,setType] = useState('');\r\n    const [mid,setMID] = useState();\r\n    const [selgen,setSelgen] = useState([]);\r\n    const [gen,setGen] = useState([]);\r\n    const geturl = useGen(selgen);\r\n\r\n    const seriesReq = async () => {\r\n        const url = ` https://api.themoviedb.org/3/discover/tv?api_key=baa2f39af2ebd5604c32fe6a7b3162e5&language=en-US&sort_by=popularity.desc&page=${page}&timezone=America%2FNew_York&with_genres=${geturl}&include_null_first_air_dates=false&with_watch_monetization_types=flatrate&with_status=0&with_type=0`;\r\n\r\n\r\n        const res = await fetch(url);\r\n        const resJson = await res.json()\r\n        if (resJson.results) {\r\n            setSlist(resJson.results)\r\n            setTotalpages(resJson.total_pages)\r\n        }\r\n        window.scroll(0, 0);\r\n    }\r\n\r\n    useEffect(() => {\r\n        seriesReq();\r\n    }, [page,geturl])\r\n\r\n    return (\r\n        <>\r\n            <div className='flex justify-center w-screen'>\r\n            <h1 className=\"font-bold text-2xl p-4 \">TV Series ðŸ“º</h1>\r\n            </div>\r\n\r\n            <Genre type=\"tv\" gen={gen} setGen= {setGen} selgen={selgen} setSelgen = {setSelgen}/>\r\n\r\n            <div className=' gap-8 justify-around grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 p-14 lg:p-20 md:p-12 '>\r\n                {\r\n                    slist && slist.map((m) => <Serieslist\r\n                        key={m.id}\r\n                        id={m.id}\r\n                        poster={m.poster_path}\r\n                        title={m.title || m.name}\r\n                        date={m.release_date || m.first_air_date}\r\n                        vote={m.vote_average}\r\n                        setModal = {setModal}\r\n                        setType={setType}\r\n                        setMID = {setMID}\r\n                    />)\r\n                }\r\n            </div>\r\n            {totalpages>1 && \r\n            <CustomPage page={page} setPage={setPage} totalpages={totalpages} />\r\n            }\r\n             {modal && <Modal setModal = {setModal} type={type} mid = {mid} />}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Series;"],"mappings":"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"},"metadata":{},"sourceType":"module"}